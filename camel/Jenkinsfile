#!/usr/bin/groovy
node('pipeline') {
  echo """
  CAMEL_VERSION : ${CAMEL_VERSION}
  CAMEL_PROD_BRANCH : ${CAMEL_PROD_BRANCH}
  CAMEL_VERSION_BRANCH : ${CAMEL_VERSION_BRANCH}
  """

  String CWD = pwd()

  // Load up CI helper methods
  checkout scm

  // Tooling versions
  def mvnHome = tool 'maven-3.8.4'
  def javaHome = tool 'java-17'
  def goHome = tool 'go-1.14'

  // Configure tooling
  env.GOROOT = "${goHome}"
  env.PATH = "${javaHome}/bin:${mvnHome}/bin:${goHome}/bin:${env.PATH}"
  env.JAVA_HOME = "${javaHome}"
  env.MAVEN_OPTS="-Xmx3g -Dmaven.artifact.threads=5"

  // Clear the workspace
  sh "pwd; ls -lah"
  def tmpDir = pwd tmp: true

  def branch = "camel-${CAMEL_VERSION}-branch" 
  def camelprodbranch = "camel-prod-branch"

  // Check out the branch
  sh "rm -rf ${tmpDir}/${branch}"
  sh "git clone -b ${CAMEL_VERSION_BRANCH} https://github.com/apache/camel.git ${tmpDir}/${branch}"
 
  // Check out the prod branch we will copy the product files from
  sh "git clone -b ${CAMEL_PROD_BRANCH} https://github.com/jboss-fuse/camel.git ${tmpDir}/${camelprodbranch}"

  // Change the version
  sh "cd ${tmpDir}/${branch}; mvn -DnewVersion=${CAMEL_VERSION}-SNAPSHOT -DgenerateBackupPoms=false versions:set"


  try {




  } catch (err) {
    currentBuild.result = "FAILURE"
    throw err
  } finally {
  }
}
